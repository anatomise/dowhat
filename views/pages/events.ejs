<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>events</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
    <link rel="stylesheet" type="text/css" href="css/style.css">

    <style>
        table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        overflow: auto; /* Enable vertical scrolling */
    }

    th, td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }

    th {
        background-color: #f2f2f2;
        position: sticky;
        top: 0;
        z-index: 1;
    }
    </style>
    </head>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-N6SCKQEZFQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-N6SCKQEZFQ');
</script>
<body>
<h1>upcoming events</h1><h3>(click headers to sort)</h3>
<table>
    <tr>
        <th onclick="sortTable(0)">Event</th>
        <th onclick="sortTable(1)">Location</th>
        <th onclick="sortTable(2)">Time</th>
        <th onclick="sortTable(3)">Tags</th>
    </tr>
    <% eventsList.forEach(event => { %>
        <tr>
            <td><%= event.name %></td>
            <td><%= event.location %></td>
            <td>
                <%= event.start %>
                <% if (event.end) { %>
                    to <%= event.end %>
                <% } %>
            </td>
            <td><%= event.tags %></td>
        </tr>
    <% }) %>
</table>

<script>
    // store order
    const sortOrders = {};

    //sort
    function sortTable(columnIndex) {
        const table = document.querySelector('table');
        const tbody = table.tBodies[0];
        const rows = Array.from(tbody.rows);

        // don't sort first row
        const rowsToSort = rows.slice(1);

        if (sortOrders[columnIndex] === undefined) {
            // Initialize order if not set
            sortOrders[columnIndex] = 1; // 1 for ascending, -1 for descending
        } else {
            // Toggle order on each click
            sortOrders[columnIndex] *= -1;
        }

        rowsToSort.sort((a, b) => {
            const aValue = a.cells[columnIndex].textContent.trim();
            const bValue = b.cells[columnIndex].textContent.trim();

            const compareResult = isNaN(aValue) ? aValue.localeCompare(bValue) : aValue - bValue;

            return sortOrders[columnIndex] * compareResult;
        });

        // replace sorted rows
        tbody.innerHTML = '';
        tbody.appendChild(rows[0]); // add header
        tbody.append(...rowsToSort);

        // update arrows in header
        updateArrows(columnIndex);
    }

    // update arrows in header
    function updateArrows(currentColumn) {
        const headers = document.querySelectorAll('th');

        headers.forEach((header, index) => {
            const arrow = index === currentColumn ? (sortOrders[currentColumn] === 1 ? '↑' : '↓') : '';
            header.innerHTML = header.textContent.replace(/↑|↓/, '') + arrow;
        });
    }
</script>

</body>
</html>